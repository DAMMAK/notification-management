services:
  postgres:
    image: postgres:14
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: notification_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - '8080:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
      image: confluentinc/cp-kafka:latest
      depends_on:
        zookeeper:
          condition: service_healthy
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      healthcheck:
        test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
        interval: 30s
        timeout: 10s
        retries: 3

#  notification-service:
#      build:
#        context: ./notification-service
#        dockerfile: ./Dockerfile
#      ports:
#        - "8081:8081"
#      depends_on:
#        kafka:
#          condition: service_healthy
#      env_file:
#        - ./notification-service/.env
#      volumes:
#        - notification-data:/data
#        - ./firebase-service-account.json:/app/firebase-service-account.json

volumes:
    notification-data:
    postgres_data:
    pgadmin_data:
