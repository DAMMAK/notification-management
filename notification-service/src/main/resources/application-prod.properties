## Server Configuration
#server.port=8081
#
## Spring Application
#spring.application.name=notification-service
#
## Kafka Configuration
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=notification-service-group
#spring.kafka.consumer.auto-offset-reset=earliest
#
## Email Configuration
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=${MAIL_USERNAME}
#spring.mail.password=${MAIL_PASSWORD}
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#
## Database Configuration
#spring.datasource.url=jdbc:h2:file:./data/notificationdb
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.datasource.driver-class-name=org.h2.Driver
#
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=false
#
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#
## Notification Configuration
#notification.kafka.topic=notification-requests
#notification.retry.interval=PT10M
#notification.retry.max-attempts=3
#
## Twilio Configuration
#twilio.account-sid=${TWILIO_ACCOUNT_SID}
#twilio.auth-token=${TWILIO_AUTH_TOKEN}
#twilio.phone-number=${TWILIO_PHONE_NUMBER}
#
## Resilience4j Circuit Breaker Configuration
#resilience4j.circuitbreaker.instances.emailService.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.emailService.waitDurationInOpenState=60s
#resilience4j.circuitbreaker.instances.emailService.slidingWindowSize=10
#
#resilience4j.circuitbreaker.instances.smsService.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.smsService.waitDurationInOpenState=60s
#resilience4j.circuitbreaker.instances.smsService.slidingWindowSize=10
#
#resilience4j.circuitbreaker.instances.pushService.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.pushService.waitDurationInOpenState=60s
#resilience4j.circuitbreaker.instances.pushService.slidingWindowSize=10
#
## Resilience4j Retry Configuration
#resilience4j.retry.instances.emailService.maxAttempts=3
#resilience4j.retry.instances.emailService.waitDuration=1s
#resilience4j.retry.instances.emailService.enableExponentialBackoff=true
#
#resilience4j.retry.instances.smsService.maxAttempts=3
#resilience4j.retry.instances.smsService.waitDuration=1s
#resilience4j.retry.instances.smsService.enableExponentialBackoff=true
#
#resilience4j.retry.instances.pushService.maxAttempts=3
#resilience4j.retry.instances.pushService.waitDuration=1s
#resilience4j.retry.instances.pushService.enableExponentialBackoff=true
